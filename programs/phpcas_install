#!/usr/bin/env php
<?php
/**
 * Install phpCAS archive into Freedom context dir
 *
 * @author Anakeen 2009
 * @license http://www.fsf.org/licensing/licenses/agpl-3.0.html GNU Affero General Public License
 */

$WIFF_ROOT = getenv("WIFF_ROOT");
if( $WIFF_ROOT === false ) {
  print "WIFF_ROOT environment variable is not set!\n";
  exit(1);
}

$WIFF_CONTEXT_ROOT = getenv("WIFF_CONTEXT_ROOT");
if( $WIFF_CONTEXT_ROOT === false ) {
  print "WIFF_CONTEXT_ROOT environment variable not set!\n";
  exit(1);
}

set_include_path(get_include_path().PATH_SEPARATOR.$WIFF_CONTEXT_ROOT.PATH_SEPARATOR."$WIFF_ROOT/include");

include_once('WHAT/Lib.System.php');

$phpcas_tgz = $argv[1];
if( $phpcas_tgz === NULL ) {
  print sprintf("Missing phpCAS archive argument\n");
  exit(1);
}
$phpcas_tgz = realpath($phpcas_tgz);
if( ! is_file($phpcas_tgz) ) {
  print sprintf("phpCAS archive not found at '%s'\n", $phpcas_tgz);
  exit(1);
}

$ret = chdir(sprintf("%s", $WIFF_CONTEXT_ROOT));
if( $ret === false ) {
  print sprintf("Could not change directory to '%s'\n", $WIFF_CONTEXT_ROOT);
  exit(1);
}

$tmpfile = LibSystem::tempnam(null, 'phpcas_untar');
if( $tmpfile === false ) {
  print sprintf("Could not create temporary file\n");
  exit(1);
}

$tempdir = basename($tmpfile);
$ret = mkdir($tempdir);
if( $ret === false ) {
  print sprintf("Could not create temporary directory '%s'\n", $tempdir);
  @unlink($tmpfile);
  exit(1);
}

// Unpack archive in tempdir
$cmd = sprintf('tar -C %s -zxf %s > %s 2>&1', escapeshellarg($tempdir), escapeshellarg($phpcas_tgz), escapeshellarg($tmpfile));
system($cmd, $ret);

$output = file_get_contents($tmpfile);
@unlink($tmpfile);

if( $ret !== 0 ) {
  print sprintf('Error tar -C %s -zcf %s\n', $tempdir, escapeshellarg($phpcas_tgz));
  exit(1);
}

// Search for a /CAS-x.x.x/ subdir in the unpacked archive
$fh = opendir($tempdir);
if( $fh === false ) {
  print sprintf("Error opening temporary directory '%s'\n", $tempdir);
  exit(1);
}

$phpcas_subdir = false;
while( ($file = readdir($fh)) !== false ) {
  if( is_dir(sprintf("%s/%s", $tempdir, $file)) && preg_match("/^CAS-\d+\.\d+\.\d+$/", $file) ) {
    $phpcas_subdir = $file;
    break;
  }
}
if( $phpcas_subdir === false ) {
  print sprintf("Could not find a valid CAS-x.x.x subdir in '%s'\n", $tempdir);
  exit(1);
}

// Create CAS dir if it does not exists
if( ! is_dir('CAS') ) {
  $ret = mkdir('CAS');
  if( $ret === false ) {
    print sprintf("Could not create 'CAS' directory\n");
    exit(1);
  }
}

// Copy new phpCAS files over existing CAS directory
$cmd = sprintf('tar -C %s/%s --exclude docs -cf - . | tar -C %s -xf -', escapeshellarg($tempdir), escapeshellarg($phpcas_subdir), "CAS");
system($cmd, $ret);

if( $ret !== 0 ) {
  print sprintf('Error copying phpCAS files (%s)\n', $cmd);
  exit(1);
}

// Cleanup tempdir
$cmd = sprintf('rm -Rf %s', escapeshellarg($tempdir));
system($cmd, $ret);

exit(0);

?>
